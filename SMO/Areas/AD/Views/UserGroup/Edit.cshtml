@model SMO.Service.AD.UserGroupService
@{
    Model.ViewId = Guid.NewGuid().ToString();
    Model.FormId = Guid.NewGuid().ToString();
}

<div id='@Model.ViewId'>
    <link href="~/Content/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/Scripts/Ztree/jquery.ztree.core-3.5.min.js"></script>
    <script src="~/Scripts/Ztree/jquery.ztree.excheck-3.5.min.js"></script>
    <div class="container-fluid child-content">
        <div class="card">
            <div class="body" style="padding-top: 0px;">
                <div class="p-t-10">
                    @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", @Model.ViewId), "Alt+N", "arrow_back")
                </div>

                <ul class="nav nav-tabs tab-nav-right" role="tablist">
                    <li role="presentation" class="active"><a href="#thongTinChinh" data-toggle="tab">Thông tin chính</a></li>
                    <li role="presentation"><a href="#danhSachNguoiDung" data-toggle="tab">Danh sách người dùng</a></li>
                    <li role="presentation"><a href="#danhSachRole" data-toggle="tab">Danh sách role</a></li>
                    <li role="presentation"><a href="#danhSachQuyen" data-toggle="tab">Danh sách quyền</a></li>
                </ul>

                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane fade in active" id="thongTinChinh">
                        @using (Ajax.BeginForm("Update", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                        {
                            @Html.AntiForgeryToken();
                            @Html.HiddenFor(m => m.ObjDetail.CODE)
                            @Html.HiddenFor(m => m.ObjDetail.ACTIVE)
                            <div class="page-function">
                                <div class="page-function-button m-r-20">
                                    @Html.MyButton("cmdSave", "Cập nhật thông tin", string.Format("Forms.SubmitForm('{0}');", @Model.FormId), "Alt+N", "done_all")
                                </div>
                            </div>

                                <div class="row">
                                    <div class="col-xs-1"></div>
                                    <div class="col-lg-7 col-xs-10">
                                        <label>Mã nhóm</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.MyTextBoxFor(m => m.ObjDetail.CODE, new { @disabled = "" })
                                            </div>
                                        </div>

                                        <label>Tên nhóm</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.MyTextBoxFor(m => m.ObjDetail.NAME)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.ObjDetail.NAME)
                                        </div>

                                        <label>Ghi chú</label>
                                        <div class="form-group">
                                            <div class="form-line">
                                                @Html.MyTextBoxFor(m => m.ObjDetail.NOTES)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.ObjDetail.NOTES)
                                        </div>
                                    </div>
                                </div>
                        }

                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachNguoiDung">
                        @{
                            Model.ViewId = Guid.NewGuid().ToString();
                            Model.FormId = Guid.NewGuid().ToString();
                            var frmUserOfGroupId = Model.FormId;
                        }
                        <div id='@Model.ViewId'>
                            @using (Ajax.BeginForm("ListUserOfGroup", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                            {
                                @Html.AntiForgeryToken();
                                @Html.HiddenFor(m => m.ObjDetail.CODE)
                                <div class="page-function">
                                    <div class="page-function-button m-r-20">
                                        @Html.MyButton("cmdAddUser", "Thêm người dùng", "AddUser();", "Alt+S", "person_add")
                                        @Html.MyButton("cmdRemoveUser", "Xóa người dùng khỏi nhóm", "RemoveUser();", "Alt+S", "delete")
                                    </div>
                                </div>

                                    <div id="divResult">
                                        @Html.Partial("ListUserOfGroup", Model)
                                    </div>
                            }
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachRole">
                        @{
                            Model.ViewId = Guid.NewGuid().ToString();
                            Model.FormId = Guid.NewGuid().ToString();
                            var frmRoleOfUserGroupId = Model.FormId;
                        }
                        <div id='@Model.ViewId'>
                            @using (Ajax.BeginForm("ListRoleOfUserGroup", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                            {
                                @Html.AntiForgeryToken();
                                @Html.HiddenFor(m => m.ObjDetail.CODE)
                                <div class="page-function">
                                    <div class="page-function-button m-r-20">
                                        @Html.MyButton("cmdAddRole", "Thêm role", "AddRole();", "Alt+S", "add")
                                        @Html.MyButton("cmdRemoveRole", "Xóa role khỏi nhóm người dùng", "RemoveRole();", "Alt+S", "delete")
                                    </div>
                                </div>

                                    <div id="divResult">
                                        @Html.Partial("ListRoleOfUserGroup", Model)
                                    </div>
                            }
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachQuyen">
                        <div class="page-function">
                            <div class="input-group page-function-search" style="margin-bottom: 7px !important">
                                @Html.DropDownList("ddlRight", SelectListUtilities.GetAllRight(), new { @id = "ddlRight", @data_live_search = "true", @class = "form-control selectpicker show-tick", placeholder = "Tìm theo domain", @data_val = false, @OnChange = "SearchRight(this);" })

                                <span class="input-group-addon" title="Tìm kiếm" onclick="SearchRight();">
                                    <i class="material-icons">search</i>
                                </span>
                            </div>
                        </div>

                        <div id="divTree">
                        </div>
                    </div>
                </div>

            </div>
        </div> 
    </div>


    <script type="text/javascript">
        function SearchRight(obj) {
            var value = $("#ddlRight").val();
            var zTree = $.fn.zTree.getZTreeObj("treeRight");
            var node = zTree.getNodesByParamFuzzy("id", value, null);
            if (node != null) {
                zTree.selectNode(node[0]);
            }
        }

        function AddUser() {
            var userGroupCode = '@Model.ObjDetail.CODE';
            var params = {
                url: "@Url.Action("AddUser")",
                data: { userGroupCode: userGroupCode }
            };
            Forms.ShowLoading();
            Forms.LoadAjaxModal(params);
        }

        function RemoveUser() {
            var lstSelected = '';
            $('.chkItemUserOfGroup').each(function () {
                if (this.checked) {
                    lstSelected += $(this).attr('modelId') + ',';
                }
            });
            if (lstSelected == '') {
                alert("Bạn hãy chọn ít nhất một người dùng!");
                return;
            }

            lstSelected = lstSelected.substring(0, lstSelected.length - 1);
            var ajaxParams = {
                url: "@Url.Action("DeleteUserOfGroup")",
                type: 'POST',
                dataType: 'json',
                data: { lstUser: lstSelected, userGroupCode: '@Model.ObjDetail.CODE' }
            };
            Forms.Ajax(ajaxParams);
        }

        function AddRole() {
            var userGroupCode = '@Model.ObjDetail.CODE';
            var params = {
                url: "@Url.Action("AddRole")",
                data: { userGroupCode: userGroupCode }
            };
            Forms.ShowLoading();
            Forms.LoadAjaxModal(params);
        }

        function RemoveRole() {
            var lstSelected = '';
            $('.chkItemRoleOfUserGroup').each(function () {
                if (this.checked) {
                    lstSelected += $(this).attr('modelId') + ',';
                }
            });
            if (lstSelected == '') {
                alert("Bạn hãy chọn ít nhất một role!");
                return;
            }

            lstSelected = lstSelected.substring(0, lstSelected.length - 1);
            var ajaxParams = {
                url: "@Url.Action("DeleteRoleOfUserGroup")",
                type: 'POST',
                dataType: 'json',
                data: { lstRole: lstSelected, userGroupCode: '@Model.ObjDetail.CODE' }
            };
            Forms.Ajax(ajaxParams);
        }

        var setting = {
            check: {
                enable: true,
                chkboxType: { "Y": "ps", "N": "ps" }
            },
            view: {
                selectedMulti: false,
                nameIsHTML: true,
                showTitle: false
            },
            data: {
                simpleData: {
                    enable: true
                }
            }
        };

        function BuildTreeRight() {
            $('#divTree').html("");
            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("BuildTreeRight")',
                type: "GET",
                data: { userGroupCode: '@Model.ObjDetail.CODE' },
                success: function (response) {
                    $('#divTree').html(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function SubmitListUserOfGroup() {
            Forms.SubmitForm('@frmUserOfGroupId');
        }

        function SubmitListRoleOfUserGroup() {
            Forms.SubmitForm('@frmRoleOfUserGroupId');
        }

        $(function () {
            //SubmitListUserOfGroup();
            //SubmitListRoleOfUserGroup();
            BuildTreeRight();
            Forms.CompleteUI();
        });
    </script>
</div>

