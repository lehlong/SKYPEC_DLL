@model SMO.Service.AD.UserService
@using SMO.Core.Entities
@{
    Model.ViewId = Guid.NewGuid().ToString();
    Model.FormId = Guid.NewGuid().ToString();
}

<div id='@Model.ViewId'>
    <link href="~/Content/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/Scripts/Ztree/jquery.ztree.core-3.5.min.js"></script>
    <script src="~/Scripts/Ztree/jquery.ztree.excheck-3.5.min.js"></script>
    <div class="container-fluid child-content">
        <div class="card">
            <div class="p-t-10 p-l-10">
                @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", @Model.ViewId), "Alt+N", "arrow_back")
            </div>
            <div class="body" style="padding-top: 0px;">
                <ul class="nav nav-tabs tab-nav-right" role="tablist">
                    <li role="presentation" class="active"><a href="#thongTinChinh" data-toggle="tab">Thông tin</a></li>
                    <li role="presentation"><a href="#danhSachNhomNguoiDung" data-toggle="tab">Nhóm người dùng</a></li>
                    <li role="presentation"><a href="#danhSachRole" data-toggle="tab">Nhóm quyền</a></li>
                    <li role="presentation"><a href="#danhSachOrg" data-toggle="tab">Đơn vị</a></li>
                    <li role="presentation"><a href="#danhSachQuyen" data-toggle="tab">Chỉnh sửa quyền</a></li>
                </ul>

                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane fade in active" id="thongTinChinh">
                        @using (Ajax.BeginForm("Update", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                        {
                            @Html.AntiForgeryToken();
                            @Html.HiddenFor(m => m.ObjDetail.USER_NAME)
                            @Html.HiddenFor(m => m.ObjDetail.ACTIVE)
                            @Html.HiddenFor(m => m.ObjDetail.IS_MODIFY_RIGHT)
                            @Html.HiddenFor(m => m.ObjDetail.ORGANIZE_CODE)
                            @Html.HiddenFor(m => m.ObjDetail.USER_TYPE)
                            <div class="page-function">
                                <div class="page-function-button m-r-20">
                                    @*@if (Model.ObjDetail.USER_TYPE == UserType.Fecon)
                        {
                            Html.MyButton("cmdSave", "Cập nhật thông tin", string.Format("Forms.SubmitForm('{0}');", Model.FormId), "Alt+N", "done_all");
                        }*@
                                    @Html.MyButton("cmdSave", "Cập nhật thông tin", string.Format("Forms.SubmitForm('{0}');", Model.FormId), "Alt+N", "done_all")

                                    @Html.MyButton("cmdResetPassword", "Reset mật khẩu", "ResetPassword();", "Alt+N", "refresh")
                                    @if (Model.ObjDetail.ACTIVE)
                                    {
                                        @Html.MyButton("cmdToggleActive", "Khóa tài khoản", "if(!confirm('Bạn chắc chắn không?')){return;}" + string.Format("Forms.ToggleActive('{0}',{1}, this);", Url.Action("ToggleActive"), "{ id : '" + Model.ObjDetail.USER_NAME + "' }"), "", "lock")
                                    }
                                    else
                                    {
                                        @Html.MyButton("cmdToggleActive", "Kích hoạt tài khoản", "if(!confirm('Bạn chắc chắn không?')){return;}" + string.Format("Forms.ToggleActive('{0}',{1}, this);", Url.Action("ToggleActive"), "{ id : '" + Model.ObjDetail.USER_NAME + "' }"), "", "lock_open")
                                    }
                                </div>
                            </div>
                            <div class="row" style="padding: 20px;">
                                <div class="col-lg-6 col-xs-12">
                                    <label>Tên đăng nhập</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.USER_NAME, new { @disabled = "" })
                                        </div>
                                    </div>

                                    <label>Tài khoản AD</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.ACCOUNT_AD)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.ACCOUNT_AD)
                                    </div>

                                    <label>Họ và tên</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.FULL_NAME)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.FULL_NAME)
                                    </div>

                                    <label>Email</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.EMAIL)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.EMAIL)
                                    </div>

                                    <label>Số điện thoại</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.PHONE)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.PHONE)
                                    </div>

                                    <label>Tên chức danh</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.TITLE)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.TITLE)
                                    </div>

                                    <label>Ghi chú</label>
                                    <div class="form-group">
                                        <div class="form-line">
                                            @Html.MyTextBoxFor(m => m.ObjDetail.NOTES)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ObjDetail.NOTES)
                                    </div>
                                </div>
                            </div>
                        }

                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachNhomNguoiDung">
                        @{
                            Model.ViewId = Guid.NewGuid().ToString();
                            Model.FormId = Guid.NewGuid().ToString();
                            var frmUserGroupOfUserId = Model.FormId;
                        }
                        <div id='@Model.ViewId'>
                            @using (Ajax.BeginForm("ListUserGroupOfUser", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                            {
                                @Html.AntiForgeryToken();
                                @Html.HiddenFor(m => m.ObjDetail.USER_NAME)
                                <div class="page-function">
                                    <div class="page-function-button m-r-20">
                                        @Html.MyButton("cmdAddUserGroup", "Gán vào nhóm người dùng", "AddUserGroup();", "Alt+S", "add")
                                        @Html.MyButton("cmdRemoveUserGroup", "Rời khỏi nhóm người dùng", "RemoveUserGroup();", "Alt+S", "delete")
                                    </div>
                                </div>

                                <div id="divResult">
                                    @Html.Partial("ListUserGroupOfUser", Model)
                                </div>
                            }
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachRole">
                        @{
                            Model.ViewId = Guid.NewGuid().ToString();
                            Model.FormId = Guid.NewGuid().ToString();
                            var frmRoleOfUserId = Model.FormId;
                        }
                        <div id='@Model.ViewId'>
                            @using (Ajax.BeginForm("ListRoleOfUser", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                            {
                                @Html.AntiForgeryToken();
                                @Html.HiddenFor(m => m.ObjDetail.USER_NAME)
                                <div class="page-function">
                                    <div class="page-function-button m-r-20">
                                        @Html.MyButton("cmdAddRole", "Thêm role", "AddRole();", "Alt+S", "add")
                                        @Html.MyButton("cmdRemoveRole", "Xóa role", "RemoveRole();", "Alt+S", "delete")
                                    </div>
                                </div>
                                <div id="divResult">
                                    @Html.Partial("ListRoleOfUser", Model)
                                </div>
                            }
                        </div>
                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachOrg">

                    </div>

                    <div role="tabpanel" class="tab-pane fade" id="danhSachQuyen">

                    </div>
                </div>
            </div>
        </div>
    </div>


    <script type="text/javascript">
        function LoadTabDanhSachQuyen() {
            $("#danhSachQuyen").html("");
            var ajaxParams = {
                url: "@Url.Action("EditRightOfUser")",
                type: 'GET',
                data: { userName: '@Model.ObjDetail.USER_NAME' },
                success: function (reponse) {
                    $("#danhSachQuyen").html(reponse);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function LoadTabDanhSachOrg() {
            $("#danhSachOrg").html("");
            var ajaxParams = {
                url: "@Url.Action("EditOrgOfUser")",
                type: 'GET',
                data: { userName: '@Model.ObjDetail.USER_NAME' },
                success: function (reponse) {
                    $("#danhSachOrg").html(reponse);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function SearchRight(obj) {
            var value = $("#ddlRight").val();
            var zTree = $.fn.zTree.getZTreeObj("treeRight");
            var node = zTree.getNodesByParamFuzzy("id", value, null);
            if (node != null) {
                zTree.selectNode(node[0]);
            }
        }

        function AddUserGroup() {
            var userName = '@Model.ObjDetail.USER_NAME';
            var params = {
                url: "@Url.Action("AddUserGroup")",
                data: { userName: userName }
            };
            Forms.ShowLoading();
            Forms.LoadAjaxModal(params);
        }

        function RemoveUserGroup() {
            var lstSelected = '';
            $('.chkItemUserGroupOfUser').each(function () {
                if (this.checked) {
                    lstSelected += $(this).attr('modelId') + ',';
                }
            });
            if (lstSelected == '') {
                alert("Bạn hãy chọn ít nhất một nhóm người dùng!");
                return;
            }

            lstSelected = lstSelected.substring(0, lstSelected.length - 1);
            var ajaxParams = {
                url: "@Url.Action("DeleteUserGroupOfUser")",
                type: 'POST',
                dataType: 'json',
                data: { lstUserGroup: lstSelected, userName: '@Model.ObjDetail.USER_NAME' }
            };
            Forms.Ajax(ajaxParams);
        }


        function AddRole() {
            var userName = '@Model.ObjDetail.USER_NAME';
            var params = {
                url: "@Url.Action("AddRole")",
                data: { userName: userName }
            };
            Forms.ShowLoading();
            Forms.LoadAjaxModal(params);
        }

        function RemoveRole() {
            var lstSelected = '';
            $('.chkItemRoleOfUser').each(function () {
                if (this.checked) {
                    lstSelected += $(this).attr('modelId') + ',';
                }
            });
            if (lstSelected == '') {
                alert("Bạn hãy chọn ít nhất một role!");
                return;
            }

            lstSelected = lstSelected.substring(0, lstSelected.length - 1);
            var ajaxParams = {
                url: "@Url.Action("DeleteRoleOfUser")",
                type: 'POST',
                dataType: 'json',
                data: { lstRole: lstSelected, userName: '@Model.ObjDetail.USER_NAME' }
            };
            Forms.Ajax(ajaxParams);
        }

        function SubmitListUserGroupOfUser() {
            Forms.SubmitForm('@frmUserGroupOfUserId');
        }

        function SubmitListRoleOfUser() {
            Forms.SubmitForm('@frmRoleOfUserId');
        }

        function UpdateRightOfUser() {
            var zTree = $.fn.zTree.getZTreeObj("treeRight");
            var nodeChange = zTree.getChangeCheckedNodes(true);
            var userName = "@Model.ObjDetail.USER_NAME";
            var orgCode = $("#ddlUserOrg").val();
            
            var arrRight = [];
            var arrStatus = [];
            $.each(nodeChange, function (i, val) {
                arrRight.push(nodeChange[i].id);
                arrStatus.push(nodeChange[i].checked);
            });

            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("UpdateRightOfUser")',
                type: "POST",
                data: { userName: userName, rightList: arrRight.join("|"), statusList: arrStatus.join("|"), orgCode : orgCode },
                dataType: "json",
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function UpdateOrgOfUser() {
            var zTree = $.fn.zTree.getZTreeObj("treeOrg");
            var nodeChecked = zTree.getCheckedNodes(true);
            var userName = "@Model.ObjDetail.USER_NAME";
            
            var arrOrg = [];
            $.each(nodeChecked, function (i, val) {
                arrOrg.push(nodeChecked[i].id);
            });

            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("UpdateOrgOfUser")',
                type: "POST",
                data: { userName: userName, orgList: arrOrg.join("|") },
                dataType: "json",
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function ResetPassword() {
            if (!confirm("Bạn chắc chắn không?")) {
                return;
            }
            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("ResetPassword")',
                type: "POST",
                data: { userName: '@Model.ObjDetail.USER_NAME' },
                dataType: "json",
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function ResetRightOfUser() {
            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("ResetRightOfUser")',
                type: "POST",
                data: { userName: '@Model.ObjDetail.USER_NAME' },
                dataType: "json",
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        var setting = {
            check: {
                enable: true,
                chkboxType: { "Y": "ps", "N": "ps" }
            },
            view: {
                selectedMulti: false,
                nameIsHTML: true,
                showTitle: false,
                fontCss: GetFont
            },
            data: {
                simpleData: {
                    enable: true
                }
            }
        };

        var settingOrg = {
            check: {
                enable: true,
                chkboxType: { "Y": "", "N": "" }
            },
            view: {
                selectedMulti: false,
                nameIsHTML: true,
                showTitle: false,
                fontCss: GetFontOrg
            },
            data: {
                simpleData: {
                    enable: true
                }
            }
        };

        function GetFont(treeId, node) {
            if (node.isRemove == "1") {
                return { color: "red" };
            }

            if (node.isAdd == "1") {
                return { color: "blue" };
            }
        }

        function GetFontOrg(treeId, node) {
            if (node.checked == true) {
                return { color: "blue" };
            }
        }

        function BuildTreeRight() {
            var orgCode = $("#ddlUserOrg").val();
            $('#divTreeUserRight').html("");
            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("BuildTreeRight")',
                type: "GET",
                data: { userName: '@Model.ObjDetail.USER_NAME', orgCode : orgCode },
                success: function (response) {
                    $('#divTreeUserRight').html(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }

        function BuildTreeOrg() {
            $('#divTreeUserOrg').html("");
            Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("BuildTreeOrg")',
                type: "GET",
                data: { userName: '@Model.ObjDetail.USER_NAME' },
                success: function (response) {
                    $('#divTreeUserOrg').html(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }


        $(function () {
            LoadTabDanhSachQuyen();
            LoadTabDanhSachOrg();
            Forms.CompleteUI();
        });
    </script>
</div>
