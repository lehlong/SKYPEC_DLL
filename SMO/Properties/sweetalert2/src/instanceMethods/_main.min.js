/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/sweetalert2@9.10.12/src/instanceMethods/_main.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import defaultParams,{showWarningsForParams}from"../utils/params.js";import*as dom from"../utils/dom/index.js";import{swalClasses}from"../utils/classes.js";import Timer from"../utils/Timer.js";import{callIfFunction}from"../utils/utils.js";import setParameters from"../utils/setParameters.js";import globalState from"../globalState.js";import{openPopup}from"../utils/openPopup.js";import privateProps from"../privateProps.js";import privateMethods from"../privateMethods.js";import{handleInputOptionsAndValue}from"../utils/dom/inputUtils.js";import{handleConfirmButtonClick,handleCancelButtonClick}from"./buttons-handlers.js";import{addKeydownHandler,setFocus}from"./keydown-handler.js";import{handlePopupClick}from"./popup-click-handler.js";import{DismissReason}from"../utils/DismissReason.js";export function _main(t){showWarningsForParams(t),globalState.currentInstance&&globalState.currentInstance._destroy(),globalState.currentInstance=this;const o=prepareParams(t);setParameters(o),Object.freeze(o),globalState.timeout&&(globalState.timeout.stop(),delete globalState.timeout),clearTimeout(globalState.restoreFocusTimeout);const e=populateDomCache(this);return dom.render(this,o),privateProps.innerParams.set(this,o),swalPromise(this,e,o)}const prepareParams=t=>{const o=Object.assign({},defaultParams.showClass,t.showClass),e=Object.assign({},defaultParams.hideClass,t.hideClass),s=Object.assign({},defaultParams,t);return s.showClass=o,s.hideClass=e,!1===t.animation&&(s.showClass={popup:"swal2-noanimation",backdrop:"swal2-noanimation"},s.hideClass={}),s},swalPromise=(t,o,e)=>new Promise(s=>{const a=o=>{t.closePopup({dismiss:o})};privateMethods.swalPromiseResolve.set(t,s),o.confirmButton.onclick=(()=>handleConfirmButtonClick(t,e)),o.cancelButton.onclick=(()=>handleCancelButtonClick(t,a)),o.closeButton.onclick=(()=>a(DismissReason.close)),handlePopupClick(t,o,a),addKeydownHandler(t,globalState,e,a),e.toast&&(e.input||e.footer||e.showCloseButton)?dom.addClass(document.body,swalClasses["toast-column"]):dom.removeClass(document.body,swalClasses["toast-column"]),handleInputOptionsAndValue(t,e),openPopup(e),setupTimer(globalState,e,a),initFocus(o,e),setTimeout(()=>{o.container.scrollTop=0})}),populateDomCache=t=>{const o={popup:dom.getPopup(),container:dom.getContainer(),content:dom.getContent(),actions:dom.getActions(),confirmButton:dom.getConfirmButton(),cancelButton:dom.getCancelButton(),closeButton:dom.getCloseButton(),validationMessage:dom.getValidationMessage(),progressSteps:dom.getProgressSteps()};return privateProps.domCache.set(t,o),o},setupTimer=(t,o,e)=>{const s=dom.getTimerProgressBar();dom.hide(s),o.timer&&(t.timeout=new Timer(()=>{e("timer"),delete t.timeout},o.timer),o.timerProgressBar&&(dom.show(s),setTimeout(()=>{t.timeout.running&&dom.animateTimerProgressBar(o.timer)})))},initFocus=(t,o)=>{if(!o.toast)return callIfFunction(o.allowEnterKey)?o.focusCancel&&dom.isVisible(t.cancelButton)?t.cancelButton.focus():o.focusConfirm&&dom.isVisible(t.confirmButton)?t.confirmButton.focus():void setFocus(o,-1,1):blurActiveElement()},blurActiveElement=()=>{document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()};
//# sourceMappingURL=/sm/639cbeb93367b02a308ed4d6ddfd28543227e4c08256ffb47d33b60fd4264822.map